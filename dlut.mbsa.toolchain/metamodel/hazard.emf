@namespace(uri="http://dlut.mbsa/hazard", prefix="hazard_")
package hazard;
import "http://dlut.mbsa/base";

abstract class HazardElement extends base.ArtifactElement {
	attr int identity;
}

class HazardPackage extends HazardElement {
	val HazardElement[*] hazardElement;
	ref HazardPackageInterface[*] ~interface;
}

class HazardPackageBinding extends HazardPackage {
	ref HazardPackage[2..*] participantPackage;
}

class HazardPackageInterface extends HazardPackage {
	ref HazardPackage[1] implements;
}

class HazardousSituation extends HazardElement{
	attr Severity[?] severity;
	attr Probability[?] probability;
	ref Cause[*] causes;
}

//there should be a reference to a design
class Cause extends HazardElement{
	ref ControlMeasure[*] controlMeasure;
}


class ControlMeasure extends HazardElement {
	val SafetyDecisionRationale[?] safetyDecisionRationale;
	val VerificationofEffectiveness[*] verificationofEffectiveness;
	val Validation[*] validation;
}


class VerificationofEffectiveness extends HazardElement{
	attr String text;
}


//reference to validation measure
class Validation extends HazardElement{
	attr String text;
}

//reference to design
class SafetyDecisionRationale extends HazardElement{
	attr String text;
}

enum Severity {
  catastrophic = 1;
  critical = 2;
  serious = 3;
  minor = 4;
  negligible = 5;
}


enum Probability {
  frequent = 1;
  probable = 2;
  occasional = 3;
  remote = 4;
  improbable = 5;
}